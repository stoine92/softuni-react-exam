{"ast":null,"code":"import\"./loginStyles.css\";import{Redirect}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Login=function Login(props){var email=props.email,setEmail=props.setEmail,password=props.password,setPassword=props.setPassword,handleLogin=props.handleLogin,handleSignUp=props.handleSignUp,hasAccount=props.hasAccount,setHasAccount=props.setHasAccount,emailError=props.emailError,passwordError=props.passwordError,isAuthenticated=props.isAuthenticated;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"login-form\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"login\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loginContainer\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"email\",autoFocus:true,required:true,value:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:\"err\",children:emailError}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"password\",autoFocus:true,required:true,value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{className:\"err\",children:passwordError}),/*#__PURE__*/_jsx(\"div\",{className:\"btnContainer\",children:hasAccount?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleLogin,children:\"Sign in\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account ?\",/*#__PURE__*/_jsx(\"span\",{className:\"switchSpan\",onClick:function onClick(){return setHasAccount(!hasAccount);},children:\"Sign up\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleSignUp,children:\"Sign up\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Have an account ?\",/*#__PURE__*/_jsx(\"span\",{className:\"switchSpan\",onClick:function onClick(){return setHasAccount(!hasAccount);},children:\"Sign in\"})]})]})})]}),isAuthenticated?/*#__PURE__*/_jsx(Redirect,{to:\"/mainPage/MainPage\"}):/*#__PURE__*/_jsx(_Fragment,{})]})})});};export default Login;","map":{"version":3,"sources":["/Users/stoyannikolov/Desktop/softuni-react-exam/src/login/Login.js"],"names":["Redirect","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignUp","hasAccount","setHasAccount","emailError","passwordError","isAuthenticated","e","target","value"],"mappings":"AAAA,MAAO,mBAAP,CACA,OAAQA,QAAR,KAAuB,kBAAvB,C,6IAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,IAErBC,CAAAA,KAFqB,CAanBD,KAbmB,CAErBC,KAFqB,CAGrBC,QAHqB,CAanBF,KAbmB,CAGrBE,QAHqB,CAIrBC,QAJqB,CAanBH,KAbmB,CAIrBG,QAJqB,CAKrBC,WALqB,CAanBJ,KAbmB,CAKrBI,WALqB,CAMrBC,WANqB,CAanBL,KAbmB,CAMrBK,WANqB,CAOrBC,YAPqB,CAanBN,KAbmB,CAOrBM,YAPqB,CAQrBC,UARqB,CAanBP,KAbmB,CAQrBO,UARqB,CASrBC,aATqB,CAanBR,KAbmB,CASrBQ,aATqB,CAUrBC,UAVqB,CAanBT,KAbmB,CAUrBS,UAVqB,CAWrBC,aAXqB,CAanBV,KAbmB,CAWrBU,aAXqB,CAYrBC,eAZqB,CAanBX,KAbmB,CAYrBW,eAZqB,CAevB,mBACE,sCACA,YAAK,SAAS,CAAC,YAAf,uBACE,iBAAS,SAAS,CAAC,OAAnB,wBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,mCADF,cAEE,aAFF,cAGE,cACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,OAFP,CAGE,SAAS,KAHX,CAIE,QAAQ,KAJV,CAKE,KAAK,CAAEV,KALT,CAME,QAAQ,CAAE,kBAACW,CAAD,QAAOV,CAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EANZ,EAHF,cAWE,UAAG,SAAS,CAAC,KAAb,UAAoBL,UAApB,EAXF,cAYE,mCAZF,cAaE,aAbF,cAcE,cACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,UAFP,CAGE,SAAS,KAHX,CAIE,QAAQ,KAJV,CAKE,KAAK,CAAEN,QALT,CAME,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EANZ,EAdF,cAsBE,UAAG,SAAS,CAAC,KAAb,UAAoBJ,aAApB,EAtBF,cAuBE,YAAK,SAAS,CAAC,cAAf,UACGH,UAAU,cACT,wCACE,eAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEF,WAApC,qBADF,cAIE,4DAEE,aACE,SAAS,CAAC,YADZ,CAEE,OAAO,CAAE,yBAAMG,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAnB,EAFX,qBAFF,GAJF,GADS,cAgBT,wCACE,eAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAED,YAApC,qBADF,cAKE,sDAEE,aACE,SAAS,CAAC,YADZ,CAEE,OAAO,CAAE,yBAAME,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAnB,EAFX,qBAFF,GALF,GAjBJ,EAvBF,GADF,CA2DGI,eAAe,cAAG,KAAC,QAAD,EAAU,EAAE,CAAC,oBAAb,EAAH,cAA0C,kBA3D5D,GADF,EADA,EADF,CAqED,CApFD,CAsFA,cAAeZ,CAAAA,KAAf","sourcesContent":["import \"./loginStyles.css\";\nimport {Redirect} from \"react-router-dom\";\n\n\nconst Login = (props) => {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogin,\n    handleSignUp,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError,\n    isAuthenticated\n  } = props;\n  \n  return (\n    <>\n    <div className=\"login-form\">\n      <section className=\"login\">\n        <div className=\"loginContainer\">\n          <label>Username</label>\n          <br />\n          <input\n            className=\"input\"\n            type=\"email\"\n            autoFocus\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></input>\n          <p className=\"err\">{emailError}</p>\n          <label>Password</label>\n          <br />\n          <input\n            className=\"input\"\n            type=\"password\"\n            autoFocus\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></input>\n          <p className=\"err\">{passwordError}</p>\n          <div className=\"btnContainer\">\n            {hasAccount ? (\n              <>\n                <button className=\"button\" onClick={handleLogin}>\n                  Sign in\n                </button>\n                <p>\n                  Don't have an account ?\n                  <span\n                    className=\"switchSpan\"\n                    onClick={() => setHasAccount(!hasAccount)}\n                  >\n                    Sign up\n                  </span>\n                </p>\n              </>\n            ) : (\n              <>\n                <button className=\"button\" onClick={handleSignUp}>\n                  Sign up\n                </button>\n\n                <p>\n                  Have an account ?\n                  <span\n                    className=\"switchSpan\"\n                    onClick={() => setHasAccount(!hasAccount)}\n                  >\n                    Sign in\n                  </span>\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n        {isAuthenticated ? <Redirect to=\"/mainPage/MainPage\"/> : (<></>)}\n      </section>\n     \n     \n    </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}