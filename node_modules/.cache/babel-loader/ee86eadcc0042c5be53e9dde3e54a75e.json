{"ast":null,"code":"var _jsxFileName = \"/Users/stoyannikolov/Desktop/softuni-react-exam/src/imgUpload/ImgUpload.js\";\nimport { useState } from 'react';\nimport { storage } from '../fire';\nimport ImgContainer from './ImgContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImgUpload = ({\n  image,\n  setImage,\n  url,\n  setUrl,\n  progress,\n  setProgress,\n  handleChange,\n  handleUpload\n}) => {\n  // const [image, setImage] = useState(null);\n  // const [url, setUrl] = useState(\"\");\n  // const [progress, setProgress] = useState(0);\n  // const handleChange = (e) =>  {\n  //     if (e.target.files[0]){\n  //         setImage(e.target.files[0]);\n  //     }\n  // };\n  // const handleUpload = () => {\n  //     const uploadTask = storage.ref(`images/${image.name}`).put(image);\n  //     uploadTask.on(\n  //         'state_changed',\n  //         snapshot => {\n  //             const progress = Math.round(\n  //                 (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n  //             );\n  //             setProgress(progress);\n  //         },\n  //         error => {\n  //             console.log(error);\n  //         },\n  //         () => {\n  //             storage\n  //             .ref('images')\n  //             .child(image.name)\n  //             .getDownloadURL()\n  //             .then(url => {\n  //                 setUrl(url)\n  //             })\n  //         }\n  //     )\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"firebase-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ImgUpload;\nexport default ImgUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgUpload\");","map":{"version":3,"sources":["/Users/stoyannikolov/Desktop/softuni-react-exam/src/imgUpload/ImgUpload.js"],"names":["useState","storage","ImgContainer","ImgUpload","image","setImage","url","setUrl","progress","setProgress","handleChange","handleUpload"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,GAAlB;AAAuBC,EAAAA,MAAvB;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA,WAAzC;AAAsDC,EAAAA,YAAtD;AAAoEC,EAAAA;AAApE,CAAD,KAAuF;AACrG;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAU,MAAA,KAAK,EAAEH,QAAjB;AAA2B,MAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI;AAAK,MAAA,GAAG,EAAEF,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhDD;;KAAMH,S;AAkDN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react';\nimport { storage } from '../fire'\nimport ImgContainer from './ImgContainer';\n\n\n\nconst ImgUpload = ({image, setImage, url, setUrl, progress, setProgress, handleChange, handleUpload}) => {\n    // const [image, setImage] = useState(null);\n    // const [url, setUrl] = useState(\"\");\n    // const [progress, setProgress] = useState(0);\n\n    // const handleChange = (e) =>  {\n    //     if (e.target.files[0]){\n    //         setImage(e.target.files[0]);\n    //     }\n    // };\n    // const handleUpload = () => {\n    //     const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    //     uploadTask.on(\n    //         'state_changed',\n    //         snapshot => {\n    //             const progress = Math.round(\n    //                 (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n    //             );\n    //             setProgress(progress);\n    //         },\n    //         error => {\n    //             console.log(error);\n    //         },\n    //         () => {\n    //             storage\n    //             .ref('images')\n    //             .child(image.name)\n    //             .getDownloadURL()\n    //             .then(url => {\n    //                 setUrl(url)\n    //             })\n    //         }\n    //     )\n    // };\n    \n    return (\n        <div>\n            <br />\n            <input type=\"file\" onChange={handleChange} />\n            <button onClick={handleUpload}>Upload</button>\n            <br />\n            <br />\n            <progress value={progress} max=\"100\" />\n            <br />\n            {/* <ImgContainer urlImage={url} /> */}\n            <img src={url} alt=\"firebase-image\" />\n        </div>\n    )\n}\n\nexport default ImgUpload"]},"metadata":{},"sourceType":"module"}