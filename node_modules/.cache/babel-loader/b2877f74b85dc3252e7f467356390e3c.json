{"ast":null,"code":"var _jsxFileName = \"/Users/stoyannikolov/Desktop/softuni-react-exam/src/quizFolder/Quiz.js\";\nimport { Component } from \"react\";\nimport \"./quiz.css\";\nimport Question from \"./question/Question\";\nimport Answer from \"./answer/Answer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: {\n        1: 'What US city is known as the \"birthplace of jazz\"?',\n        2: 'What is the capital of Greece?',\n        3: 'What planet gave birth to Superman?'\n      },\n      answers: {\n        1: {\n          1: 'Chicago',\n          2: 'New Orleans',\n          3: 'New York'\n        }\n      },\n      2: {\n        1: 'Athens',\n        2: \"Patras\",\n        3: 'Kalamata'\n      },\n      3: {\n        1: \"Krypton\",\n        2: 'Mars',\n        3: 'Earth'\n      }\n    };\n\n    this.checkAnswer = answer => {\n      const {\n        correctAnswers,\n        step,\n        score\n      } = this.state;\n\n      if (answer === correctAnswers[step]) {\n        this.setState({\n          score: score + 1,\n          correctAnswer: correctAnswers[step],\n          clickedAnswer: answer\n        });\n      } else {\n        this.setState({\n          correctAnswer: 0,\n          clickedAnswer: answer\n        });\n      }\n    };\n\n    this.nextStep = step => {\n      this.setState({\n        step: step + 1,\n        correctAnswer: 0,\n        clickedAnswer: 0\n      });\n    };\n  }\n\n  render() {\n    let {\n      questions,\n      step,\n      correctAnswer,\n      clickedAnswer,\n      answers\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizDiv\",\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: questions[step]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Answer, {\n          answer: answers[step],\n          step: step,\n          checkAnswer: this.checkAnswer,\n          correctAnswer: correctAnswer,\n          clickedAnswer: clickedAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"NextStep\",\n          disabled: clickedAnswer && Object.keys(questions).length >= step ? false : true,\n          onClick: () => this.nextStep(step),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/stoyannikolov/Desktop/softuni-react-exam/src/quizFolder/Quiz.js"],"names":["Component","Question","Answer","Quiz","state","questions","answers","checkAnswer","answer","correctAnswers","step","score","setState","correctAnswer","clickedAnswer","nextStep","render","Object","keys","length"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACNC,MAAAA,SAAS,EAAE;AACT,WAAG,oDADM;AAET,WAAG,gCAFM;AAGT,WAAG;AAHM,OADL;AAMNC,MAAAA,OAAO,EAAE;AACP,WAAG;AAAE,aAAG,SAAL;AAAgB,aAAG,aAAnB;AAAkC,aAAG;AAArC;AADI,OANH;AASN,SAAG;AACD,WAAG,QADF;AAED,WAAG,QAFF;AAGD,WAAG;AAHF,OATG;AAcN,SAAG;AACD,WAAG,SADF;AAED,WAAG,MAFF;AAGD,WAAG;AAHF;AAdG,KADmB;;AAAA,SAqB3BC,WArB2B,GAqBbC,MAAM,IAAI;AACtB,YAAM;AAAEC,QAAAA,cAAF;AAAkBC,QAAAA,IAAlB;AAAwBC,QAAAA;AAAxB,UAAkC,KAAKP,KAA7C;;AACA,UAAII,MAAM,KAAKC,cAAc,CAACC,IAAD,CAA7B,EAAqC;AACnC,aAAKE,QAAL,CAAc;AACZD,UAAAA,KAAK,EAAEA,KAAK,GAAG,CADH;AAEZE,UAAAA,aAAa,EAAEJ,cAAc,CAACC,IAAD,CAFjB;AAGZI,UAAAA,aAAa,EAAEN;AAHH,SAAd;AAKD,OAND,MAMO;AACL,aAAKI,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAE,CADH;AAEZC,UAAAA,aAAa,EAAEN;AAFH,SAAd;AAID;AACF,KAnC0B;;AAAA,SAqC3BO,QArC2B,GAqChBL,IAAI,IAAI;AACjB,WAAKE,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAEA,IAAI,GAAG,CADD;AAEZG,QAAAA,aAAa,EAAE,CAFH;AAGZC,QAAAA,aAAa,EAAE;AAHH,OAAd;AAKD,KA3C0B;AAAA;;AA4C3BE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEX,MAAAA,SAAF;AAAaK,MAAAA,IAAb;AAAmBG,MAAAA,aAAnB;AAAkCC,MAAAA,aAAlC;AAAiDR,MAAAA;AAAjD,QAA6D,KAAKF,KAAtE;AACA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEC,SAAS,CAACK,IAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,MAAM,EAAEJ,OAAO,CAACI,IAAD,CADjB;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,WAAW,EAAE,KAAKH,WAHpB;AAIE,UAAA,aAAa,EAAEM,aAJjB;AAKE,UAAA,aAAa,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,QAAQ,EACNA,aAAa,IAAIG,MAAM,CAACC,IAAP,CAAYb,SAAZ,EAAuBc,MAAvB,IAAiCT,IAAlD,GAAyD,KAAzD,GAAiE,IAHrE;AAKE,UAAA,OAAO,EAAE,MAAM,KAAKK,QAAL,CAAcL,IAAd,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAuBD;;AArE0B;;AAwE7B,eAAeP,IAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./quiz.css\";\nimport Question from \"./question/Question\";\nimport Answer from \"./answer/Answer\";\n\nclass Quiz extends Component {\n  state = {\n    questions: {\n      1: 'What US city is known as the \"birthplace of jazz\"?',\n      2: 'What is the capital of Greece?',\n      3: 'What planet gave birth to Superman?',\n    },\n    answers: {\n      1: { 1: 'Chicago', 2: 'New Orleans', 3: 'New York' },\n    },\n    2: {\n      1: 'Athens',\n      2: \"Patras\",\n      3: 'Kalamata'\n    },\n    3: {\n      1: \"Krypton\",\n      2: 'Mars',\n      3: 'Earth'\n    },\n  };\n  checkAnswer = answer => {\n    const { correctAnswers, step, score } = this.state;\n    if (answer === correctAnswers[step]) {\n      this.setState({\n        score: score + 1,\n        correctAnswer: correctAnswers[step],\n        clickedAnswer: answer,\n      });\n    } else {\n      this.setState({\n        correctAnswer: 0,\n        clickedAnswer: answer,\n      });\n    }\n  };\n\n  nextStep = step => {\n    this.setState({\n      step: step + 1,\n      correctAnswer: 0,\n      clickedAnswer: 0\n    })\n  }\n  render() {\n    let { questions, step, correctAnswer, clickedAnswer, answers } = this.state;\n    return (\n      <>\n        <div className=\"quizDiv\">\n          <Question question={questions[step]} />\n          <Answer\n            answer={answers[step]}\n            step={step}\n            checkAnswer={this.checkAnswer}\n            correctAnswer={correctAnswer}\n            clickedAnswer={clickedAnswer}\n          />\n          <button\n            className='NextStep'\n            disabled={\n              clickedAnswer && Object.keys(questions).length >= step ? false : true\n            }\n            onClick={() => this.nextStep(step)}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}