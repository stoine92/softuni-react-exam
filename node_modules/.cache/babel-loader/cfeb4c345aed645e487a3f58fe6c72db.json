{"ast":null,"code":"var _jsxFileName = \"/Users/stoyannikolov/Desktop/softuni-react-exam/src/quizFolder/Quiz.js\";\nimport { Component } from \"react\";\nimport \"./quiz.css\";\nimport Question from \"./question/Question\";\nimport Answer from \"./answer/Answer\";\nimport Header from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: {\n        1: 'Who is the director of Star Wars\"?',\n        2: \"Who is the son of Darth Vader?\",\n        3: \"When was the first movie launched?\"\n      },\n      answers: {\n        1: {\n          1: \"Stephen King\",\n          2: \"George Lucas\",\n          3: \"Stephen Spielberg\"\n        },\n        2: {\n          1: \"Luke Skywalker\",\n          2: \"Obi-Wan Kenobi\",\n          3: \"R2-D2\"\n        },\n        3: {\n          1: \"1977\",\n          2: \"1982\",\n          3: \"1978\"\n        }\n      },\n      correctAnswers: {\n        1: \"2\",\n        2: \"1\",\n        3: \"1\"\n      },\n      correctAnswer: 0,\n      clickedAnswer: 0,\n      step: 1,\n      score: 0\n    };\n\n    this.checkAnswer = answer => {\n      const {\n        correctAnswers,\n        step,\n        score\n      } = this.state;\n\n      if (answer === correctAnswers[step]) {\n        this.setState({\n          score: score + 1,\n          correctAnswer: correctAnswers[step],\n          clickedAnswer: answer\n        });\n      } else {\n        this.setState({\n          correctAnswer: 0,\n          clickedAnswer: answer\n        });\n      }\n    };\n\n    this.nextStep = step => {\n      this.setState({\n        step: step + 1,\n        correctAnswer: 0,\n        clickedAnswer: 0\n      });\n    };\n  }\n\n  render() {\n    let {\n      questions,\n      step,\n      correctAnswer,\n      clickedAnswer,\n      answers,\n      score\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizDiv\",\n        children: step <= Object.keys(questions).length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Question, {\n            question: questions[step]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Answer, {\n            answer: answers[step],\n            step: step,\n            checkAnswer: this.checkAnswer,\n            correctAnswer: correctAnswer,\n            clickedAnswer: clickedAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"NextStep\",\n            disabled: clickedAnswer && Object.keys(questions).length >= step ? false : true,\n            onClick: () => this.nextStep(step),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finalPage\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"You have finished the quiz!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your score is: \", score, \" of \", Object.keys(questions).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thanks!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/stoyannikolov/Desktop/softuni-react-exam/src/quizFolder/Quiz.js"],"names":["Component","Question","Answer","Header","Quiz","state","questions","answers","correctAnswers","correctAnswer","clickedAnswer","step","score","checkAnswer","answer","setState","nextStep","render","Object","keys","length"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,EAAnB;;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,SAAS,EAAE;AACT,WAAG,oCADM;AAET,WAAG,gCAFM;AAGT,WAAG;AAHM,OADL;AAMNC,MAAAA,OAAO,EAAE;AACP,WAAG;AAAE,aAAG,cAAL;AAAqB,aAAG,cAAxB;AAAwC,aAAG;AAA3C,SADI;AAGP,WAAG;AACD,aAAG,gBADF;AAED,aAAG,gBAFF;AAGD,aAAG;AAHF,SAHI;AAQP,WAAG;AACD,aAAG,MADF;AAED,aAAG,MAFF;AAGD,aAAG;AAHF;AARI,OANH;AAoBNC,MAAAA,cAAc,EAAE;AACd,WAAG,GADW;AAEd,WAAG,GAFW;AAGd,WAAG;AAHW,OApBV;AAyBNC,MAAAA,aAAa,EAAE,CAzBT;AA0BNC,MAAAA,aAAa,EAAE,CA1BT;AA2BNC,MAAAA,IAAI,EAAE,CA3BA;AA4BNC,MAAAA,KAAK,EAAE;AA5BD,KADmB;;AAAA,SA+B3BC,WA/B2B,GA+BZC,MAAD,IAAY;AACxB,YAAM;AAAEN,QAAAA,cAAF;AAAkBG,QAAAA,IAAlB;AAAwBC,QAAAA;AAAxB,UAAkC,KAAKP,KAA7C;;AACA,UAAIS,MAAM,KAAKN,cAAc,CAACG,IAAD,CAA7B,EAAqC;AACnC,aAAKI,QAAL,CAAc;AACZH,UAAAA,KAAK,EAAEA,KAAK,GAAG,CADH;AAEZH,UAAAA,aAAa,EAAED,cAAc,CAACG,IAAD,CAFjB;AAGZD,UAAAA,aAAa,EAAEI;AAHH,SAAd;AAKD,OAND,MAMO;AACL,aAAKC,QAAL,CAAc;AACZN,UAAAA,aAAa,EAAE,CADH;AAEZC,UAAAA,aAAa,EAAEI;AAFH,SAAd;AAID;AACF,KA7C0B;;AAAA,SA+C3BE,QA/C2B,GA+CfL,IAAD,IAAU;AACnB,WAAKI,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEA,IAAI,GAAG,CADD;AAEZF,QAAAA,aAAa,EAAE,CAFH;AAGZC,QAAAA,aAAa,EAAE;AAHH,OAAd;AAKD,KArD0B;AAAA;;AAsD3BO,EAAAA,MAAM,GAAG;AACP,QAAI;AACFX,MAAAA,SADE;AAEFK,MAAAA,IAFE;AAGFF,MAAAA,aAHE;AAIFC,MAAAA,aAJE;AAKFH,MAAAA,OALE;AAMFK,MAAAA;AANE,QAOA,KAAKP,KAPT;AAQA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGM,IAAI,IAAIO,MAAM,CAACC,IAAP,CAAYb,SAAZ,EAAuBc,MAA/B,gBACC;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEd,SAAS,CAACK,IAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,MAAM,EAAEJ,OAAO,CAACI,IAAD,CADjB;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,WAAW,EAAE,KAAKE,WAHpB;AAIE,YAAA,aAAa,EAAEJ,aAJjB;AAKE,YAAA,aAAa,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,QAAQ,EACNA,aAAa,IAAIQ,MAAM,CAACC,IAAP,CAAYb,SAAZ,EAAuBc,MAAvB,IAAiCT,IAAlD,GACI,KADJ,GAEI,IALR;AAOE,YAAA,OAAO,EAAE,MAAM,KAAKK,QAAL,CAAcL,IAAd,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA,wBADD,gBAuBC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,0CACkBC,KADlB,UAC6BM,MAAM,CAACC,IAAP,CAAYb,SAAZ,EAAuBc,MADpD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBJ;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAqCD;;AApG0B;;AAuG7B,eAAehB,IAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./quiz.css\";\nimport Question from \"./question/Question\";\nimport Answer from \"./answer/Answer\";\nimport Header from ''\n\nclass Quiz extends Component {\n  state = {\n    questions: {\n      1: 'Who is the director of Star Wars\"?',\n      2: \"Who is the son of Darth Vader?\",\n      3: \"When was the first movie launched?\",\n    },\n    answers: {\n      1: { 1: \"Stephen King\", 2: \"George Lucas\", 3: \"Stephen Spielberg\" },\n\n      2: {\n        1: \"Luke Skywalker\",\n        2: \"Obi-Wan Kenobi\",\n        3: \"R2-D2\",\n      },\n      3: {\n        1: \"1977\",\n        2: \"1982\",\n        3: \"1978\",\n      },\n    },\n    correctAnswers: {\n      1: \"2\",\n      2: \"1\",\n      3: \"1\",\n    },\n    correctAnswer: 0,\n    clickedAnswer: 0,\n    step: 1,\n    score: 0,\n  };\n  checkAnswer = (answer) => {\n    const { correctAnswers, step, score } = this.state;\n    if (answer === correctAnswers[step]) {\n      this.setState({\n        score: score + 1,\n        correctAnswer: correctAnswers[step],\n        clickedAnswer: answer,\n      });\n    } else {\n      this.setState({\n        correctAnswer: 0,\n        clickedAnswer: answer,\n      });\n    }\n  };\n\n  nextStep = (step) => {\n    this.setState({\n      step: step + 1,\n      correctAnswer: 0,\n      clickedAnswer: 0,\n    });\n  };\n  render() {\n    let {\n      questions,\n      step,\n      correctAnswer,\n      clickedAnswer,\n      answers,\n      score,\n    } = this.state;\n    return (\n      <>\n        <div className=\"quizDiv\">\n          {step <= Object.keys(questions).length ? (\n            <>\n              <Question question={questions[step]} />\n              <Answer\n                answer={answers[step]}\n                step={step}\n                checkAnswer={this.checkAnswer}\n                correctAnswer={correctAnswer}\n                clickedAnswer={clickedAnswer}\n              />\n              <button\n                className=\"NextStep\"\n                disabled={\n                  clickedAnswer && Object.keys(questions).length >= step\n                    ? false\n                    : true\n                }\n                onClick={() => this.nextStep(step)}\n              >\n                Next\n              </button>\n            </>\n          ) : (\n            <div className=\"finalPage\">\n              <h1>You have finished the quiz!</h1>\n              <p>\n                Your score is: {score} of {Object.keys(questions).length}\n              </p>\n              <p>Thanks!</p>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}